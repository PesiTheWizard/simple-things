//**** Defines used to model the castling Moves. ****
(define "HasNeverMoved"
	(= (state at:(mapEntry #1 (mover))) 1) 
)

(define "PieceHasMoved"
	(set State at:#1 0) 
)

(define "RememberPieceHasMoved"
	(then 
		(if 
			(= (state at:(last To)) 1) 
			("PieceHasMoved" (last To))
		) 
	) 
)

(define "KingNotCheckedAndToEmpty"
	(and 
		(is Empty (to)) 
		(not ("IsInCheck" "King" Mover at:(to)))
	) 
)

(define "DecideToCastle"
	(move Slide 
		(from (mapEntry #1 (mover))) 
		#2 
		(between 
			(exact #3) 
			if:#4
		) 
		(to 
			if:True
			(apply ("PieceHasMoved" (from)))
		)
		#5
	)
)

(define "CastleRook"
	(slide 
		(from (mapEntry #1 (mover))) 
		#2 
		(between 
			(exact #3) 
			if:#4
		) 
		(to 
			if:True
			(apply ("PieceHasMoved" (from)))
		)
	)
)

(define "SmallCastling"
	("DecideToCastle" "King" E 2 "KingNotCheckedAndToEmpty" (then ("CastleRook" "RookRight" W 2 True)))
)

(define "BigCastling"
	("DecideToCastle" "King" W 2 "KingNotCheckedAndToEmpty" (then ("CastleRook" "RookLeft" E 3 True)))
)

(define "Castling"
	(if (and 
			("HasNeverMoved" "King")
			(not ("IsInCheck" "King" Mover)) 
		)
		(or
			(if (and 
					("HasNeverMoved" "RookLeft")
					(can Move ("CastleRook" "RookLeft" E 3 (is Empty (to))))
				)
				"BigCastling"
			)
			(if (and 
					("HasNeverMoved" "RookRight")
					(can Move ("CastleRook" "RookRight" W 2 (is Empty (to))))
				)
				"SmallCastling"
			)
		)
	)
)

//**** Defines used to model the extra Pawn moves. ****
(define "SetEnPassantLocation"
	(then 
		(set Pending (ahead (last To) Backward))
	)
)

(define "InLocationEnPassant"
	(and 
		(is Pending) 
		(= (to) (value Pending)) 
	)
)

(define "EnPassant"
	(move Step 
		(directions {FR FL}) 
		(to if:"InLocationEnPassant") 
		(then 
			(remove 
				(ahead (last To) Backward)
			)
		)
	)
)

(define "InitialPawnMove"
	(if (is In (from) (sites Start (piece (what at:(from)))))
		("DoubleStepForwardToEmpty" "SetEnPassantLocation")
	)
)

//------------------------------------------------------------------------------

(game "XXL_Chess" 
	("TwoPlayersNorthSouth") 
	(equipment { 
		(board (square 14)) 
		
		("ChessPawn" "Pawn"
			(or 
				"InitialPawnMove"
				"EnPassant"
			)
			(then
				(and
					(if
						(is In (last To) (sites Mover "Promotion"))
						(move Promote (last To) (piece "Queen") Mover)
					)
					(set Counter)
				)
			)
		)
		("ChessRook" "Rook" (then (set Counter)) ("RememberPieceHasMoved"))
		("ChessKing" "King" (then (set Counter)) ("RememberPieceHasMoved"))
		("ChessBishop" "Bishop" (then (set Counter)))
		("ChessKnight" "Knight" (then (set Counter)))
		("ChessQueen" "Queen" (then (set Counter)))
		(piece "Camel" Each ("LeapCapture" {{F F F R F} {F F F L F}} (then (set Counter)) ))
		(piece "knight_queen" Each
			(or
				("SlideCapture" ~ ~ (then (set Counter)))
				("LeapCapture" "KnightWalk" (then (set Counter)))
			)
		)
		(piece "knight_bishop" Each
			(or
				("SlideCapture" Diagonal ~ (then (set Counter)))
				("LeapCapture" "KnightWalk" (then (set Counter)))
			)
		)
		(piece "knight_king" Each
			(or
				("LeapCapture" "KnightWalk" (then (set Counter)) )
				("StepToNotFriend")//issue - captures don't reset the counter
			)
		)
		(piece "knight_rook" Each
			(or
				("LeapCapture" "KnightWalk" (then (set Counter)) )
				("SlideCapture" Orthogonal ~ (then (set Counter)))
			)
		)

		(map "King" {(pair 1 "H1") (pair 2 "H14")})
		(map "RookLeft" {(pair 1 "A1") (pair 2 "A14")})
		(map "RookRight" {(pair 1 "N1") (pair 2 "N14")})
		(regions "Promotion" P1 (expand (sites Top) steps:6))
		(regions "Promotion" P2 (expand (sites Bottom) steps:6))
	}) 
	(rules 
		(start { 
			(place "Pawn1" (sites Row 1))
			(place "Pawn2" (sites Row 12))
			(place "Rook1" {"A1" "N1"} state:1) (place "Knight1" {"B1" "M1"}) (place "Bishop1" {"C1" "L1"}) (place "knight_bishop1" coord:"D1") (place "Camel1" {"E1" "J1"}) (place "knight_king1" {"F1" "I1"}) (place "knight_queen1" coord:"G1") (place "King1" coord:"H1" state:1) (place "knight_rook1" coord:"K1")
			(place "Rook2" {"A14" "N14"} state:1) (place "Knight2" {"B14" "M14"}) (place "Bishop2" {"C14" "L14"}) (place "knight_bishop2" coord:"D14") (place "Camel2" {"E14" "J14"}) (place "knight_king2" {"F14" "I14"}) (place "knight_queen2" coord:"G14") (place "King2" coord:"H14" state:1) (place "knight_rook2" coord:"K14")
		})
		
		(play 
			(if "SameTurn"
				(move Promote (last To) (piece {"Queen" "Knight" "Bishop" "Rook"}) Mover)
				(do 
					(or 
						(forEach Piece)
						("Castling")
					)
					ifAfterwards:(not ("IsInCheck" "King" Mover))
				)
			)
		)
		
		(end {
			("Checkmate" "King")
			(if (or (no Moves Mover) (= (counter) 99)) (result Mover Draw)) 
		})
	)
)

//------------------------------------------------------------------------------

(metadata 
	
	(info
		{
		(description "A no-thought, badly-designed showcase thing from chess.com")
		(rules "Played on a 14x14 board with pieces with specialized moves: Pawns (14): can move one space forward; Rooks (2): can move any number of spaces orthogonally; Bishops (2): can move any number of spaces diagonally; Knight (2): moves in any direction, one space orthogonally with one space forward diagonally; Queens (0): can move any number of spaces orthogonally or diagonally, pawns promote to this; Other (?): move like two other pieces combined; Kings (1): can move one space orthogonally or diagonally. Players capture pieces by moving onto a space occupied by an opponent's piece. Player wins when they checkmate the other player's king.")
		(source "<a href=\"https://en.wikipedia.org/wiki/Rules_of_chess\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />Wikipedia</a>")
		(id "44")
		(version "1.3.12")
		(classification "board/war/replacement/checkmate/chess")
		(credit "Humanity's ballooning ego")
		(origin "This game was played on chess.com, from around who's counting to whenever.")
		}
	)
	
	(graphics {
		(show Check "King")
		(piece Scale "Pawn" 0.825)
		(piece Families {"Defined"})
		(board Style Chess)
	})
	
	(ai 
		"Chess_ai"
	)
	
)

